<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbEmployee.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA9xJREFUeF7tmstqFEEUhuPCuDC6E8St4sILBhdegiKo+Dh5DRVBSFQwruJDCK4U
        jW5dRIwrd8adF0RFUWn/M/V1jZnumunq6enuTPqDA13/Oaeq5p+2L2NmOjq2kiTJrOKm4oOiLjYVNxSz
        bKM52EhTXGcbzaFN2LdhLCBNHK11wS2ZbCI1BxtJGNYGy9a+bgb20RnAsDZYtr0GSHrpMrmsUeaRFltf
        BePfTXrTCIYe5CCUeZCDUOZBrorydxMmaMwAhqVQ+/h3EybYlgYYTFN+Hvo7Axh6kINQ5kEOQpkHuTOA
        oUdSqbsJw3joz9vImsvk8pwyj7TY+h4MPchBKPMgV2/ApGHZzgCGHuQglHmQOwMYxkN/ZwBDj6Ra3gUY
        epCDUOZBnogBQ6HMgxyEMg9ynl7J3aQw9LfGgFiYpjOAYTz0dwYw9CAHocyDHIQyD3JnAEOPpO5dYBiU
        eZCrN2DSsGxnAEMPchDKPMg7xwDxRnFHcfL/+l5zGejfTgak/FXcc4cTMEDSsKtxLGXfBX4qlhRnFXsJ
        O15WWM5Dezz0j/NNFIJpPch5+obLJO8Vp5AzKDdPTQ/keOgvvMFYmKbQ/BoeV/xR2Lcb/PApqjET0jPh
        KHIcNLfFADvdjSWkkajWLojGLaQ4aA5usCqY1oM8aIBd4Y0zSCNR7TnXkrxCioPmvA0Oe7KLpdCToIY/
        nJrMIY1EtftcS/IZKQ6aMwakkM6FkkI1g5AeNOC7U6MM2O9aki9IcdDcFgPK/BM471qSdaQ4aG6LAXed
        miwjjUS16cNQtRfBFNK5UFKoZhDSgwacUNgTnt3a5pGDqOa04pfit+IYchxq7MEwA+lcKClUMwjpTF5S
        eluzh5ygCcrZh0//wu02cjxM0CYD9ige95Lu2zVD7FY3p7Ar/oLCTnvLGY8Uu2mPx83RnAFil+Ka4qHi
        nSK9FcbwTfFW8UBxhSWKYd0Gwwykc6FkXAOqfN5Ieao4wlLDcfWNGlCEVdqsb9VJI/mouEhbGFdbrwGS
        D7tsYewUt2uAhR0XxUwYfia4utoNeOaytfCEZfOhqDYDJF1ymVq5zPJ9JFb5i08dXCXKcJ+P3YfEduIQ
        UYYNPnYfEsFTf1JoyS2/5RXkE+3Wbxe2WL7S3odEEwaUwf+oquMXToqD9j7obcEeb9O/+81jhW3bvlec
        lEtwHtr7SJvEE1gp2NKwL2WREqtZdFIWSnLnIdU87GcLpIYZ4J/vdRy8E1AylQb4d307dlIWSqbSAHvT
        O6g4oFg3IQ+mmUoDjNdEEKaZWgNGwjStNyBz9yE1SQMy/y/RsTOZmfkH4mFZG820fx0AAAAASUVORK5C
        YII=
</value>
  </data>
</root>